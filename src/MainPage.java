
import com.sun.corba.se.spi.activation.Server;
import java.awt.AWTException;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mike
 */
public class MainPage extends javax.swing.JFrame {

    /**
     * Creates new form MainPage
     */
    public MainPage() throws IOException {
        initComponents();
       /* ProcessBuilder bu = new ProcessBuilder("cmd","ipconfig");
        Process p = bu.start();
        BufferedReader s1 = new BufferedReader(new InputStreamReader(p.getInputStream()));
        jTextArea1.setText(s1.toString());*/
      /*   try{
        ServerSocket m_ser = new ServerSocket(6377);
        //jTextArea1.setText("hhhufyc");
        System.out.println("Started");
        Socket cli = m_ser.accept();
       // jTextArea1.append("\nClient aa gya");
        System.out.println("Started 2");
        d_in = new DataInputStream(cli.getInputStream());
        d_out = new DataOutputStream(cli.getOutputStream());
        d_out.writeUTF("HEY"); 
        while(true){
        String in=d_in.readUTF();
        if(in.equals("MouseButton"))
            MoveMouse();
        if(in.equals("scr"))
            ScreenShot();
        }
       // InetAddress m = m_ser.getInetAddress();
       // String m_ip = m.getAddress().toString();
       //jTextArea1.append("Listiing port "+m_ip);
        }catch(Exception E){System.out.println("Exception aa gayi reeeeeee");};*/
        
    }
      DataInputStream d_in ;
      DataOutputStream d_out;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("SSSSSS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(294, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(209, 209, 209))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115)
                .addComponent(jButton2)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
        try{
        ServerSocket m_ser = new ServerSocket(6377);
        //jTextArea1.setText("hhhufyc");
        System.out.println("Started");
        Socket cli = m_ser.accept();
       // jTextArea1.append("\nClient aa gya");
        System.out.println("Started 2");
        d_in = new DataInputStream(cli.getInputStream());
        d_out = new DataOutputStream(cli.getOutputStream());
        d_out.writeUTF("HEY"); 
        while(true){
        String in=d_in.readUTF();
        if(in.equals("MouseButton"))
            MoveMouse();
        if(in.equals("scr"))
            ScreenShot();
        if(in.equals("prss"))
            process();
        }
       // InetAddress m = m_ser.getInetAddress();
       // String m_ip = m.getAddress().toString();
       //jTextArea1.append("Listiing port "+m_ip);
        }catch(Exception E){System.out.println("Exception aa gayi reeeeeee");};
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            process();
            // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainPage().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables

    private void MoveMouse() throws IOException, InterruptedException, AWTException {
        String in = "Test";
        while(true){
        String res = "";
    res = d_in.readUTF();
    int len = res.length();
    int x=0,y=0;
    int del = res.indexOf(":");
    for(int i=0;i<del;i++){
     x = x*10+(res.charAt(i) - '0');
    }
    for(int i=del+1;i<len;i++){
     y = y*10+(res.charAt(i) - '0');
    }
    System.out.println(""+x+" "+y);
      Thread.sleep(1);
   Robot r = new Robot();
   r.mouseMove(x, y);

        
        }
    }

    private void ScreenShot() {
        try {
            Robot robot = new Robot();
            String format = "jpg";
            String fileName = "FullScreenshot." + format;
             
            Rectangle screenRect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());
            BufferedImage screenFullImage = robot.createScreenCapture(screenRect);
            File f = new File(fileName);
            ImageIO.write(screenFullImage, format, f);
           // ImageIO.w
            
            System.out.println("A full screenshot saved!");
            File myFile = new File("FullScreenshot.jpg");
            byte[] mybytearray = new byte[(int) myFile.length()];
      BufferedInputStream bis = new BufferedInputStream(new FileInputStream(myFile));
      bis.read(mybytearray, 0, mybytearray.length);
      int size = mybytearray.length;
      System.out.println("OUPUT BYTES ARE "+size );
      d_out.writeDouble(size);
      d_out.write(mybytearray, 0, mybytearray.length);
      d_out.flush();
               
        } catch (AWTException | IOException ex) {
            System.err.println(ex);
        } }

    private void process() throws IOException {
      ProcessBuilder builder = new ProcessBuilder("cmd.exe", "/c", "tasklist /FI \"PID gt 1000\"");          
      builder.redirectErrorStream(true); 
      Process p = builder.start(); 
      BufferedReader r = new BufferedReader(new InputStreamReader(p.getInputStream())); 
      String line; 
      String[] arofp = new String [1000];
      int i=0;
    //  StringBuilder process = null;
      while (true) { 
            //String tmp;
            line = r.readLine(); 
            if (line == null) { break; }
          int l1 = line.indexOf(".", 0);
          if(l1>0){
           arofp[i] =  line.substring(0, l1);
           i++;
          }
          System.out.println(line+"L1 :"+l1); 
        
   }
      d_out.writeInt(i-1);
       for(int j=0;arofp[j]!=null;j++)
          d_out.writeUTF(arofp[j]);
      System.out.println("Sent Array");
}

    
}
